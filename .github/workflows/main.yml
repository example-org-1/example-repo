name: Example
on:
  push:
    branches:
    - main
jobs:
  job2:            # NOTE: this is where your macOS-based, GitHub Actions workflow will be executed.
    needs: up     
    runs-on: [self-hosted, "${{ needs.up.outputs.vm-name }}"]     # NOTE: this section of the workflow can contain any number of seperate jobs,
    steps:                                                          # but each must have this `runs-on` value.
    - name: Job 2
      id: job2
      run: |
        sw_vers
  down:
    if: always()
    needs:
    - up
    - job2
    runs-on: ubuntu-latest
    steps:
    - id: down
      name: down
      uses: jeff-vincent/orka-actions-down-org@1.0.0
      with:
        githubOrg: example-org-1
        githubPat: ${{ secrets.GH_PAT }}
        orkaPass: ${{ secrets.ORKA_PASS }}
        orkaUser: ${{ secrets.ORKA_USER }}
        vmName: ${{ needs.job1.outputs.vm-name }}
        vpnAddress: ${{ secrets.VPN_ADDRESS }}
        vpnPassword: ${{ secrets.VPN_PASSWORD }}
        vpnServerCert: ${{ secrets.VPN_SERVER_CERT }}
        vpnUser: ${{ secrets.VPN_USER }}
  up:
    outputs:
      vm-name: ${{ steps.up.outputs.vm-name }}
    runs-on: ubuntu-latest
    steps:
    - id: up
      name: up
      uses: jeff-vincent/orka-actions-up-org@1.0.0
      with:
        coreCount: 3
        githubOrg: example-org-1
        githubPat: ${{ secrets.GH_PAT }}
        orkaBaseImage: gha-org-agent.img
        orkaPass: ${{ secrets.ORKA_PASS }}
        orkaUser: ${{ secrets.ORKA_USER }}
        vcpuCount: 3
        vpnAddress: ${{ secrets.VPN_ADDRESS }}
        vpnPassword: ${{ secrets.VPN_PASSWORD }}
        vpnServerCert: ${{ secrets.VPN_SERVER_CERT }}
        vpnUser: ${{ secrets.VPN_USER }}

